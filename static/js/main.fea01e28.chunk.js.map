{"version":3,"sources":["platform/common/header/bio/index.js","platform/common/header/profilepicture/index.js","platform/common/header/repositories/index.js","platform/common/header/followers/index.js","platform/common/header/following/index.js","platform/common/header/commits/index.js","platform/common/header/lines/index.js","platform/common/header/index.js","platform/common/repositories/repository/index.js","platform/common/repositories/header/index.js","platform/common/repositories/index.js","App.js","serviceWorker.js","index.js"],"names":["REACT_APP_LOGIN","process","GET_BIO_INFOS","gql","Bio","useQuery","variables","login","loading","error","data","className","user","name","email","company","bio","location","GET_PROFILPICTURE_INFOS","ProfilePicture","src","viewer","avatarUrl","alt","GET_REPOSITORIES_INFOS","Repositories","repositories","totalCount","GET_FOLLOWERS_INFOS","Followers","followers","GET_FOLLOWING_INFOS","Following","following","GET_COMMITS_INFOS","Commits","repos","nodes","nbCommits","forEach","item","defaultBranchRef","target","history","Lines","nbLinesCodesAdditions","nbLinesCodes","lines","additions","deletions","Header","GET_REPOSITORY_INFOS","useStyles","makeStyles","theme","root","width","marginBottom","heading","fontSize","fontWeight","color","panelHeader","backgroundColor","borderTopRightRadius","borderTopLeftRadius","panel","panelDetails","display","flexDirection","div","collabParent","collab","textAlign","languageParent","lang","marginTop","margin","padding","borderRadius","alignItems","langText","langColor","height","marginLeft","Repository","classes","map","repo","index","key","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","Typography","ExpansionPanelDetails","collaborators","collaborator","languages","language","style","App","Boolean","window","hostname","match","REACT_APP_TOKEN","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.fea01e28.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./index.css\";\n\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst { REACT_APP_LOGIN } = process.env;\n\nconst GET_BIO_INFOS = gql`\n\tquery($login: String!) {\n\t\tuser(login: $login) {\n\t\t\tbio\n\t\t\tname\n\t\t\tcompany\n\t\t\temail\n\t\t\tlocation\n\t\t}\n\t}\n`;\n\nfunction Bio() {\n\tconst { loading, error, data } = useQuery(GET_BIO_INFOS, {\n\t\tvariables: { login: REACT_APP_LOGIN },\n\t});\n\n\tif (loading) return null;\n\tif (error) return `Error! ${error}`;\n\n\treturn (\n\t\t<div className=\"content\">\n\t\t\t<div className=\"name\">{data.user.name}</div>\n\t\t\t<div className=\"infos\">\n\t\t\t\t<div>\n\t\t\t\t\t<div>{data.user.email}</div>\n\t\t\t\t\t<div>{data.user.company}</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div>{data.user.bio}</div>\n\t\t\t\t\t<div>{data.user.location}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Bio;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GET_PROFILPICTURE_INFOS = gql`\n\tquery {\n\t\tviewer {\n\t\t\tavatarUrl\n\t\t}\n\t}\n`;\n\nfunction ProfilePicture() {\n\tconst { loading, error, data } = useQuery(GET_PROFILPICTURE_INFOS);\n\n\tif (loading) return null;\n\tif (error) return `Error! ${error}`;\n\n\treturn (\n\t\t<div className=\"profile-img-container\">\n\t\t\t<img className=\"profile-img\" src={data.viewer.avatarUrl} alt=\"profile\" />\n\t\t</div>\n\t);\n}\n\nexport default ProfilePicture;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst { REACT_APP_LOGIN } = process.env;\n\nconst GET_REPOSITORIES_INFOS = gql`\n\tquery($login: String!) {\n\t\tuser(login: $login) {\n\t\t\trepositories {\n\t\t\t\ttotalCount\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction Repositories() {\n\tconst { loading, error, data } = useQuery(GET_REPOSITORIES_INFOS, {\n\t\tvariables: { login: REACT_APP_LOGIN },\n\t});\n\n\tif (loading) return null;\n\tif (error) return `Error! ${error}`;\n\n\treturn (\n\t\t<div className=\"content2\">\n\t\t\t<div className=\"title\">Repositories</div>\n\t\t\t<div className=\"title\">{data.user.repositories.totalCount}</div>\n\t\t</div>\n\t);\n}\n\nexport default Repositories;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst { REACT_APP_LOGIN } = process.env;\n\nconst GET_FOLLOWERS_INFOS = gql`\n\tquery($login: String!) {\n\t\tuser(login: $login) {\n\t\t\tfollowers {\n\t\t\t\ttotalCount\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction Followers() {\n\tconst { loading, error, data } = useQuery(GET_FOLLOWERS_INFOS, {\n\t\tvariables: { login: REACT_APP_LOGIN },\n\t});\n\n\tif (loading) return null;\n\tif (error) return `Error! ${error}`;\n\n\treturn (\n\t\t<div className=\"content2\">\n\t\t\t<div className=\"title\">Followers</div>\n\t\t\t<div className=\"title\">{data.user.followers.totalCount}</div>\n\t\t</div>\n\t);\n}\n\nexport default Followers;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst { REACT_APP_LOGIN } = process.env;\n\nconst GET_FOLLOWING_INFOS = gql`\n\tquery($login: String!) {\n\t\tuser(login: $login) {\n\t\t\tfollowing {\n\t\t\t\ttotalCount\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction Following() {\n\tconst { loading, error, data } = useQuery(GET_FOLLOWING_INFOS, {\n\t\tvariables: { login: REACT_APP_LOGIN },\n\t});\n\n\tif (loading) return null;\n\tif (error) return `Error! ${error}`;\n\n\treturn (\n\t\t<div className=\"content2\">\n\t\t\t<div className=\"title\">Following</div>\n\t\t\t<div className=\"title\">{data.user.following.totalCount}</div>\n\t\t</div>\n\t);\n}\n\nexport default Following;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst { REACT_APP_LOGIN } = process.env;\n\nconst GET_COMMITS_INFOS = gql`\n\tquery($login: String!) {\n\t\tuser(login: $login) {\n\t\t\trepositories(first: 100) {\n\t\t\t\ttotalCount\n\t\t\t\tnodes {\n\t\t\t\t\tdefaultBranchRef {\n\t\t\t\t\t\ttarget {\n\t\t\t\t\t\t\t... on Commit {\n\t\t\t\t\t\t\t\thistory {\n\t\t\t\t\t\t\t\t\ttotalCount\n\t\t\t\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\t\t\t\tadditions\n\t\t\t\t\t\t\t\t\t\tdeletions\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction Commits() {\n\tconst { loading, error, data } = useQuery(GET_COMMITS_INFOS, {\n\t\tvariables: { login: REACT_APP_LOGIN },\n\t});\n\n\tif (loading) return null;\n\tif (error) return `Error! ${error}`;\n\n\tconst repos = data.user.repositories.nodes;\n\tlet nbCommits = 0;\n\n\trepos.forEach(item => {\n\t\tif (item.defaultBranchRef != null) {\n\t\t\tnbCommits += item.defaultBranchRef.target.history.totalCount;\n\t\t}\n\t});\n\n\treturn (\n\t\t<div className=\"content2\">\n\t\t\t<div className=\"title\">Commits</div>\n\t\t\t<div className=\"title\">{nbCommits}</div>\n\t\t</div>\n\t);\n}\n\nexport default Commits;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst { REACT_APP_LOGIN } = process.env;\n\nconst GET_COMMITS_INFOS = gql`\n\tquery($login: String!) {\n\t\tuser(login: $login) {\n\t\t\trepositories(first: 100) {\n\t\t\t\ttotalCount\n\t\t\t\tnodes {\n\t\t\t\t\tdefaultBranchRef {\n\t\t\t\t\t\ttarget {\n\t\t\t\t\t\t\t... on Commit {\n\t\t\t\t\t\t\t\thistory {\n\t\t\t\t\t\t\t\t\ttotalCount\n\t\t\t\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\t\t\t\tadditions\n\t\t\t\t\t\t\t\t\t\tdeletions\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction Lines() {\n\tconst { loading, error, data } = useQuery(GET_COMMITS_INFOS, {\n\t\tvariables: { login: REACT_APP_LOGIN },\n\t});\n\n\tif (loading) return null;\n\tif (error) return `Error! ${error}`;\n\n\tconst repos = data.user.repositories.nodes;\n\tlet nbLinesCodesAdditions = 0;\n\tlet nbLinesCodesDeletions = 0;\n\tlet nbLinesCodes = 0;\n\n\trepos.forEach(item => {\n\t\tif (item.defaultBranchRef != null) {\n\t\t\titem.defaultBranchRef.target.history.nodes.forEach(lines => {\n\t\t\t\tnbLinesCodesAdditions += lines.additions;\n\t\t\t\tnbLinesCodesAdditions += lines.deletions;\n\t\t\t});\n\t\t\tnbLinesCodes = nbLinesCodesAdditions - nbLinesCodesDeletions;\n\t\t}\n\t});\n\n\treturn (\n\t\t<div className=\"content2\">\n\t\t\t<div className=\"title\">Lines of code</div>\n\t\t\t<div className=\"title\">{nbLinesCodes}</div>\n\t\t</div>\n\t);\n}\n\nexport default Lines;\n","import React from \"react\";\nimport \"./index.css\";\nimport Bio from \"./bio\";\nimport ProfilePicture from \"./profilepicture\";\nimport Repositories from \"./repositories\";\nimport Followers from \"./followers\";\nimport Following from \"./following\";\nimport Commits from \"./commits\";\nimport Lines from \"./lines\";\n\nfunction Header() {\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<Bio />\n\t\t\t</div>\n\t\t\t<div className=\"content\">\n\t\t\t\t<ProfilePicture />\n\t\t\t\t<Commits />\n\t\t\t\t<Repositories />\n\t\t\t\t<Lines />\n\t\t\t\t<Followers />\n\t\t\t\t<Following />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./index.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst { REACT_APP_LOGIN } = process.env;\n\nconst GET_REPOSITORY_INFOS = gql`\n\tquery($login: String!) {\n\t\tuser(login: $login) {\n\t\t\trepositories(first: 100) {\n\t\t\t\ttotalCount\n\t\t\t\tnodes {\n\t\t\t\t\tname\n\t\t\t\t\tnameWithOwner\n\t\t\t\t\tassignableUsers {\n\t\t\t\t\t\ttotalCount\n\t\t\t\t\t}\n\t\t\t\t\tcollaborators(first: 10) {\n\t\t\t\t\t\ttotalCount\n\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\tlogin\n\t\t\t\t\t\t\tavatarUrl\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlanguages(first: 100) {\n\t\t\t\t\t\ttotalCount\n\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tcolor\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\twidth: \"100%\",\n\t\tmarginBottom: 8,\n\t},\n\theading: {\n\t\tfontSize: 20,\n\t\tfontWeight: 500,\n\t\tcolor: \"#FFFFFF\",\n\t},\n\tpanelHeader: {\n\t\tbackgroundColor: \"#3d4047\",\n\t\tborderTopRightRadius: 5,\n\t\tborderTopLeftRadius: 5,\n\t},\n\tpanel: {\n\t\tbackgroundColor: \"transparent\",\n\t},\n\tpanelDetails: {\n\t\tbackgroundColor: \"#505359\",\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t},\n\tdiv: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t},\n\tcollabParent: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\tmarginBottom: 8,\n\t},\n\tcollab: {\n\t\ttextAlign: \"center\",\n\t\tcolor: \"white\",\n\t},\n\tlanguageParent: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t},\n\tlang: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\tmarginTop: 8,\n\t\tmargin: 8,\n\t\tbackgroundColor: \"#3d4047\",\n\t\tpadding: 20,\n\t\tborderRadius: 5,\n\t\talignItems: \"center\",\n\t},\n\tlangText: {\n\t\tcolor: \"white\",\n\t},\n\tlangColor: {\n\t\twidth: 20,\n\t\theight: 20,\n\t\tborderRadius: 100,\n\t\tmarginLeft: 16,\n\t},\n}));\n\nfunction pastille(color) {\n\treturn <div style={{ backgroundColor: color, width: 20, height: 20, borderRadius: 100, marginLeft: 16 }}></div>;\n}\n\nfunction Repository() {\n\tconst classes = useStyles();\n\n\tconst { loading, error, data } = useQuery(GET_REPOSITORY_INFOS, {\n\t\tvariables: { login: REACT_APP_LOGIN },\n\t});\n\n\tif (loading) return null;\n\tif (error) return `Error! ${error}`;\n\n\treturn data.user.repositories.nodes.map((repo, index) => {\n\t\treturn (\n\t\t\t<div className={classes.root} key={index}>\n\t\t\t\t<ExpansionPanel className={classes.panel}>\n\t\t\t\t\t<ExpansionPanelSummary\n\t\t\t\t\t\texpandIcon={<ExpandMoreIcon />}\n\t\t\t\t\t\taria-controls=\"panel1a-content\"\n\t\t\t\t\t\tid=\"panel1a-header\"\n\t\t\t\t\t\tclassName={classes.panelHeader}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography className={classes.heading}>{repo.name}</Typography>\n\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t\t<ExpansionPanelDetails className={classes.panelDetails}>\n\t\t\t\t\t\t<div className={classes.div}>\n\t\t\t\t\t\t\t<div className={classes.collabParent}>\n\t\t\t\t\t\t\t\t{repo.collaborators.nodes.map((collaborator, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"profile-img-container\">\n\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"profile-img\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={collaborator.avatarUrl}\n\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"profile\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.collab}>{collaborator.login}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={classes.languageParent}>\n\t\t\t\t\t\t\t\t{repo.languages.nodes.map((language, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div key={index} className={classes.lang}>\n\t\t\t\t\t\t\t\t\t\t\t<div className={classes.langText}>{language.name}</div>\n\t\t\t\t\t\t\t\t\t\t\t{pastille(language.color)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ExpansionPanelDetails>\n\t\t\t\t</ExpansionPanel>\n\t\t\t</div>\n\t\t);\n\t});\n}\n\nexport default Repository;\n","import React from \"react\";\nimport \"./index.css\";\n\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst { REACT_APP_LOGIN } = process.env;\n\nconst GET_REPOSITORIES_INFOS = gql`\n\tquery($login: String!) {\n\t\tuser(login: $login) {\n\t\t\trepositories(first: 100) {\n\t\t\t\ttotalCount\n\t\t\t\tnodes {\n\t\t\t\t\tupdatedAt\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nfunction Header() {\n\tconst { loading, error, data } = useQuery(GET_REPOSITORIES_INFOS, {\n\t\tvariables: { login: REACT_APP_LOGIN },\n\t});\n\n\tif (loading) return null;\n\tif (error) return `Error! ${error}`;\n\n\treturn (\n\t\t<div className=\"content3\">\n\t\t\t<div className=\"name2\">Repositories</div>\n\t\t\t<div className=\"info\">{data.user.repositories.totalCount}</div>\n\t\t</div>\n\t);\n}\nexport default Header;\n","import React from \"react\";\nimport \"./index.css\";\nimport Repository from \"./repository\";\nimport Header from \"./header\";\n\nfunction Repositories() {\n\treturn (\n\t\t<div className=\"content4\">\n\t\t\t<Header />\n\t\t\t<Repository />\n\t\t</div>\n\t);\n}\n\nexport default Repositories;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Header from \"./platform/common/header\";\nimport Repositories from \"./platform/common/repositories\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App-header\">\n\t\t\t<Header />\n\t\t\t<Repositories />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then(response => {\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\"No internet connection found. App is running in offline mode.\");\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient } from \"apollo-boost\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst { REACT_APP_TOKEN } = process.env;\n\nconst httpLink = createHttpLink({\n\turi: \"https://api.github.com/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: `Bearer ${REACT_APP_TOKEN}`,\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ApolloProvider client={client}>\n\t\t\t<App />\n\t\t</ApolloProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}